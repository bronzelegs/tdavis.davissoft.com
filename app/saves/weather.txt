
'use strict';

// oldstyle

var url = 'http://api.wunderground.com/api/80dca8463834e03c/conditions/q/CA/Los_Angeles.json';

//we used to do it like this
$('#parsedWeather').click(function () {
  var jqxhr = $.getJSON(url, function (json) {
      console.log('success');
       var weatherData = json['data'];
      for(var key in weatherData) {
        $('#parsedResult').append(' ' + key + ' ' + weatherData[key] );
      }
    })
    .fail(function () {
      console.log('failed');
    });
});

$('#runThree').click(function () {
  $.ajax(url)
    .done(function (json) {
      console.log('JSON Data: ' + json);
      $('#resultThree').text('result ' + JSON.stringify(json));
    })
    .fail(function (jqxhr, textStatus, error) {
      var err = textStatus + ', ' + error;
      console.log('Request Failed: ' + err);
    });
});

//use the fetch version
$('#parsedWeather').click(function () {
  getByFetch(url);
});

// es6 promise versions

let XhrRequest = obj => {
  return new Promise((resolve, reject) => {
    let xhr = new XMLHttpRequest();
    xhr.open(obj.method || 'GET', obj.url);
    if (obj.headers) {
      Object.keys(obj.headers).forEach(key => {
        xhr.setRequestHeader(key, obj.headers[key]);
      });
    }
    xhr.onload = () => {
      if (xhr.status >= 200 && xhr.status < 300) {
        resolve(xhr.response);
      } else {
        reject(xhr.statusText);
      }
    };
    xhr.onerror = () => reject(xhr.statusText);
    xhr.send(obj.body);
  });
};

//es6 version
function es6Get() {
  XhrRequest(url).then((json) => {
    ('#parsedResult').text('result ' + 'version' + ' ' + json.apiVersion + ' ');
    var weatherData = json['data'];
    for (var key in weatherData) {
      $('#parsedResult').append(' ' + key + ' ' + weatherData[key]);
    }
  });
}
//using fetch, works on modern browsers

var myHeaders = new Headers();
var myInit = {
  method: 'GET',
  headers: myHeaders,
  mode: 'cors',
  cache: 'default'
};

var myRequest = new Request(url, myInit);

function getByFetch(url) {
  fetch(myRequest).then(function (response) {
    return response.json();
  }).then(function (json) {
    $('#parsedResult.text('partially parsed only ');
    console.log('success');
    var weatherData = json['current_observation'];
    for (var key in weatherData) {
      $('#parsedResult').append(' ' + key + ' ' + weatherData[key]);
    }
  });
}

// observer
let url = 'http://api.wunderground.com/api/80dca8463834e03c/conditions/q/CA/Los_Angeles.json';

var req = Rx.Observable.just(url);
var result {};
var resp = req
  .flatMap(function(reqUrl) {
    return Rx.Observable.fromPromise(jQuery.getJSON(reqUrl));
  });

resp.subscribe(function(response) {
  // render `response` to the DOM however you wish
  console.log(response, result);

});
